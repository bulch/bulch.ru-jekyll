name: Build and deploy jekyll site

on:
  push:
    branches:
      - master
      # - source
      # It is highly recommended that you only run this action on push to a
      # specific branch, eg. master or source (if on *.github.io repo)

  workflow_dispatch: # Allows a run of this workflow to be triggerred manually from the Actions tab

jobs:
  jekyll:
    runs-on: ubuntu-latest
    steps:
      - name: üìÇ Setup
        uses: actions/checkout@v3
      
      - name: üíâ Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install jpegoptim optipng brotli
          npm install --global pug

      - name: üíé Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2 # can change this to whatever version you prefer

      - name: üî® Build site
        uses: limjh16/jekyll-action-ts@v2
        with:
          enable_cache: true
          jekyll_src: src
          custom_opts: '--config _config.yml'

      - name: üç¨ Optimized-builder
        run: |
          find ./dist -maxdepth 10 -type f -name "*.js" -o -name "*.html" -o -name "*.css" | awk '{ print "\""$0"\""}' | xargs -n 1 gzip -9k
          find ./dist -maxdepth 10 -type f -name "*.js" -o -name "*.html" -o -name "*.css" | awk '{ print "\""$0"\""}' | xargs -n 1 brotli -Zk
          find ./dist -maxdepth 10 -type f -name "*.png" | awk '{ print "\""$0"\""}' | xargs -n 1 optipng | true
          find ./dist -maxdepth 10 -type f -name "*.jpg" | awk '{ print "\""$0"\""}' | xargs -n 1 jpegoptim --strip-all | true

      # - name: üöÄ Deploy
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./dist

      - name: üöÄ Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: d85f990fb58850151a51d4831fa1d2d8
          projectName: bulch.ru-jekyll
          directory: dist
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          # Optional: Switch what branch you are publishing to.
          # By default this will be the branch which triggered this workflow
          branch: master
          # Optional: Change the working directory
          # workingDirectory: my-site
          # Optional: Change the Wrangler version, allows you to point to a specific version or a tag such as `beta`
          wranglerVersion: '3'
      - name: Outputs
        run: |
          echo "ID: ${{ steps.publish.outputs.id }}"
          echo "URL: ${{ steps.publish.outputs.url }}"
          echo "Environment: ${{ steps.publish.outputs.environment }}"
          echo "Alias: ${{ steps.publish.outputs.alias }}"
