name: Build and deploy jekyll site in github-pages

on:
  push:
    branches:
      - master

  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📂 Setup
        uses: actions/checkout@v4
      
      - name: 💉 Install dependencies
        run: npm install --global pug

      - name: 💎 Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2

      - name: 🔨 Build site
        uses: limjh16/jekyll-action-ts@v2
        with:
          enable_cache: true
          jekyll_src: src
          custom_opts: '--config _config.yml'
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jekyll_site
          path: _site
          retention-days: 5
  
  optimized:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name:  💉 Install dependencies
        run: sudo apt-get update && sudo apt-get -y install jpegoptim optipng brotli

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: jekyll_site
      
      - name: debug
        run: la -al

      - name: 🍬 Optimized-builder - js, css, html to gz
        run: find ./_site -maxdepth 10 -type f -name "*.js" -o -name "*.html" -o -name "*.css" | awk '{ print "\""$0"\""}' | xargs -n 1 gzip -9k

      - name: 🍬 Optimized-builder - js, css, html to brotli
        run: find ./_site -maxdepth 10 -type f -name "*.js" -o -name "*.html" -o -name "*.css" | awk '{ print "\""$0"\""}' | xargs -n 1 brotli -Zk

      - name: 🍬 Optimized-builder - image png to optipng
        run: find ./_site -maxdepth 10 -type f -name "*.png" | awk '{ print "\""$0"\""}' | xargs -n 1 optipng | true

      - name: 🍬 Optimized-builder - image jpg to jpegoptim
        run: find ./_site -maxdepth 10 -type f -name "*.jpg" | awk '{ print "\""$0"\""}' | xargs -n 1 jpegoptim --strip-all | true
      
      - name: ⏰ Upload Pages artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: optimized
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
